{
	"info": {
		"_postman_id": "a4fe9a2c-ed5b-49c3-80bb-1846d831b855",
		"name": "tp3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "New User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Check all atributes\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('id')",
							"    pm.expect(jsonData).to.have.property('username')",
							"    pm.expect(jsonData).to.have.property('created_at')",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"   pm.response.to.have.header(\"Content-Type\");",
							"   pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json')",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\" : \"newuser\",\n\t\"password\" : \"1234\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{hostname}}/api/users",
					"protocol": "http",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Duplicate User ",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 409\", function () {",
							"    pm.response.to.have.status(409);",
							"});",
							"pm.test(\"Check all atributes\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('description')",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"   pm.response.to.have.header(\"Content-Type\");",
							"   pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json')",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\" : \"root\",\n\t\"password\" : \"password\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{hostname}}/api/users",
					"protocol": "http",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Complex Request User.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"pm.test(\"Check all atributes\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('description')",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"   pm.response.to.have.header(\"Content-Type\");",
							"   pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json')",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\" : \"root\",\n\t\"password\" : {\n\t\t\"Password\": 123\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{hostname}}/api/users",
					"protocol": "http",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Bad Request User.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"pm.test(\"Check all atributes\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('description')",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"   pm.response.to.have.header(\"Content-Type\");",
							"   pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json')",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\" : \"root\",\n\t\"password\" : {\n\t\t\"Password\": 123\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{hostname}}/api/users",
					"protocol": "http",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "List Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check all atributes\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('data');",
							"    pm.expect(jsonData.data).to.be.an(\"array\");",
							"    jsonData.data.forEach(item => {",
							"       pm.expect(item).to.have.keys('user_id','username')",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"   pm.response.to.have.header(\"Content-Type\");",
							"   pm.response.to.be.header(\"Content-Type\", \"application/json\");",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"host": true
				}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{hostname}}/api/users",
					"protocol": "http",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get File",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check all atributes\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('link');",
							"    pm.expect(jsonData).to.have.property('filesize');",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"   pm.response.to.have.header(\"Content-Type\");",
							"   pm.response.to.be.header(\"Content-Type\", \"application/json\");",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"product\": \"OR_ABI-L2-RRQPEF\",\n    \"datetime\": \"2021/003/00\"\n}"
				},
				"url": {
					"raw": "http://{{hostname}}/api/server/goes",
					"protocol": "http",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"api",
						"server",
						"goes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get File Bad Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check all atributes\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('file_id');;",
							"    pm.expect(jsonData).to.have.property('link');",
							"    pm.expect(jsonData).to.have.property('filesize');",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"   pm.response.to.have.header(\"Content-Type\");",
							"   pm.response.to.be.header(\"Content-Type\", \"application/json\");",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"product\": \"OR_ABI-L2-MCMIPF\",\n    \"datetime\": \n    {\n        \"datetime\": \"2021%m%d%h\"\n    }\n}"
				},
				"url": {
					"raw": "http://{{hostname}}/api/server/goes",
					"protocol": "http",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"api",
						"server",
						"goes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get No in server File",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check all atributes\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('description');;",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"   pm.response.to.have.header(\"Content-Type\");",
							"   pm.response.to.be.header(\"Content-Type\", \"application/json\");",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"product\": \"OR_ABI-L2-MCMIPF\",\n    \"datetime\": \"2021%m%d%h\"\n}"
				},
				"url": {
					"raw": "http://{{hostname}}/api/server/goes",
					"protocol": "http",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"api",
						"server",
						"goes"
					]
				}
			},
			"response": []
		},
		{
			"name": "List Files",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check all atributes\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('files');",
							"    pm.expect(jsonData.files).to.be.an(\"array\");",
							"    jsonData.files.forEach(item => {",
							"       pm.expect(item).to.have.keys('file_id','link','filesize')",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"   pm.response.to.have.header(\"Content-Type\");",
							"   pm.response.to.be.header(\"Content-Type\", \"application/json\");",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{hostname}}/api/server/goes/",
					"protocol": "http",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"api",
						"server",
						"goes",
						""
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "1234",
				"type": "string"
			},
			{
				"key": "username",
				"value": "user1",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "hostname",
			"value": "www.tp3.com"
		},
		{
			"key": "test_port_u",
			"value": "8537"
		},
		{
			"key": "username",
			"value": "user1"
		},
		{
			"key": "password",
			"value": "1234"
		},
		{
			"key": "test_port_s",
			"value": "8537"
		}
	]
}